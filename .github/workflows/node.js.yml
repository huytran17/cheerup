name: Node.js CI

run-name: ${{ github.actor }} is running ðŸš€

on:
  push:
    paths-ignore:
      - "README.md"
      - "core/admin-dashboard/**/*"
      - "core/user-dashboard/**/*"
      - "core/user-dashboard-v2/**/*"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PASSPORT_JWT_SECRET: ${{ secrets.PASSPORT_JWT_SECRET }}

    defaults:
      run:
        working-directory: ./core/server

    strategy:
      matrix:
        node-version: [18.x]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add focal-security and install libssl1.1
        run: |
          echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
          sudo apt-get update
          sudo apt-get install -y libssl1.1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.4.x
          cache: yarn
          cache-dependency-path: "./core/server/yarn.lock"

      - name: Setup Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 6

      - name: Cache node-modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent

      - name: Unit testing
        run: yarn test:ci
