version: "2.1"

services:
  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - redis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis-admin:
    image: erikdubbelboer/phpredisadmin
    restart: always
    ports:
      - 8085:80
    depends_on:
      - redis
    environment:
      REDIS_1_HOST: redis
      REDIS_1_NAME: redis
      REDIS_1_PORT: 6379
    networks:
      - redis-network
  mongoset-1:
    image: mongo
    container_name: mongoset-1,
    restart: unless-stopped
    volumes:
      - ./mongo/dataset-1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
    ports:
      - 27021:27017
    links:
      - mongoset-2
      - mongoset-3
    networks:
      - mongodb-network
    entrypoint:
      ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "mongo-replica-set"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo db:${MONGO_PORT}/speech-api --quiet
      interval: 30s
      timeout: 15s
      retries: 5

  mongoset-2:
    image: mongo
    container_name: mongoset-2
    restart: unless-stopped
    volumes:
      - ./mongo/dataset-2:/data/db
    ports: 27022:27017
    networks:
      - mongodb-network
    entrypoint:
      ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "mongo-replica-set"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo db:${MONGO_PORT}/speech-api --quiet
      interval: 30s
      timeout: 15s
      retries: 5

  mongoset-3:
    image: mongo
    container_name: mongset-3
    restart: unless-stopped
    volumes:
      - ./mongo/dataset-3:/data/db
    ports:
      - 27023:27017
    networks:
      - mongodb-network
    entrypoint:
      ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "mongo-replica-set"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo db:${MONGO_PORT}/speech-api --quiet
      interval: 30s
      timeout: 15s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    volumes:
      - ./mongo/data:/data/db
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGO_ADMIN_URL}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_ADMIN_SERVER}
    networks:
      - mongodb-network

networks:
  redis-network:
    driver: bridge
  mongodb-network:
    driver: bridge
